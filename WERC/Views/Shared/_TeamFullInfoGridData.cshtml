@using Model.ToolsModels.DropDownList

@using Model.ToolsModels.Grid

@model VmJsGrid

@{
    var jsGridHtmlElementId = "_" + Model.HtmlElementId;
    var jsGridObjectId = Model.HtmlElementId;
    var detailsDialogHtmlElementId = Guid.NewGuid().ToString().Replace("-", "_");
    var jsGridLoadDataUrl = Url.Action(Model.DataAction, Model.DataController);
    var jsGridUpdateDataUrl = Url.Action(Model.EditAction, Model.EditController);
    var Display = Model.ReadOnly ? "hidden" : "";
}

<div class="row">

    <div id="externalPager"></div><div id="@jsGridHtmlElementId"></div>
    <link href="~/Resources/CSS/modal-fixed-full-screen.css" rel="stylesheet" />
    <div class="modal-fixed-full-screen">
        <div class="modal fade" id="teamMemberModal" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"><span id="teamNameSpan"></span> Team Members</h4>
                    </div>
                    <div class="modal-body">
                        <a href="#" class="display-block" id="writtenReportId" target="_blank"></a>
                        <a href="#" class="display-block hidden" id="flashTalkReportId" target="_blank"></a>
                        <a href="#" class="display-block hidden" id="brochureId" target="_blank"></a>
                        <a href="#" class="display-block hidden" id="awardNominationId" target="_blank"></a>
                        <a href="#" class="display-block hidden" id="preliminaryReportId" target="_blank"></a>
                        <a href="#" class="display-block hidden" id="openTaskPlanId" target="_blank"></a>
                        <hr />
                        <div id="teamMemberDiv" class="row text-left"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="hidden">

    <div class="config-panel">
        <label><input id="heading" type="checkbox" checked /> Heading</label>
        <label><input id="filtering" type="checkbox" /> Filtering</label>
        <label><input id="inserting" type="checkbox" /> Inserting</label>
        <label><input id="editing" type="checkbox" checked /> Editing</label>
        <label><input id="paging" type="checkbox" checked /> Paging</label>
        <label><input id="sorting" type="checkbox" /> Sorting</label>
        <label><input id="selecting" type="checkbox" checked /> Selecting</label>
    </div>

</div>

<!--Modal start-->
<div class="modal modal fade" id="transferToAnOtherAdvisorModal" tabindex="-1"
     role="dialog" aria-labelledby="contact-title-font" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <!--review for image quality-->

            <div class="modal-header">
                <button type="button" class="close contact-close" data-dismiss="modal" aria-label="Close">
                    <span class="close-contact" aria-hidden="true">&times;</span>
                </button>
                <h3>
                    Select advisor and click on Transfer button
                </h3>
            </div>

            <div class="modal-body">
                <div class="row">

                    <div class="col-xs-12">
                        
                            <div class="col-xs-8">
                                
                                <input id="teamIdInput" type="hidden" />
                                <input id="advisorIdInput" type="hidden" />

                                @Html.Partial("_DropDownList",
                                        new VmDropDownList
                                        {
                                            HtmlElementId = "advisorDdl",
                                            DataController = "person",
                                            DataAction = "gaddl",
                                            OptionLabel = Model["Select Advisor..."],
                                            OnItemSelected = "advisorDropDownList_OnClientSelectedItem",

                                        })

                                <script>
    function advisorDropDownList_OnClientSelectedItem(id) {
        $('#advisorIdInput').val(id);
    }
                                </script>

                            </div>

                            <div class="col-xs-4 text-center">

                                <button type="submit" id="transferToAnOtherAdvisorButton"
                                        class="btn btn-primary">
                                    Transfer
                                </button>
                                <button type="button" class="btn btn-primary" data-dismiss="modal" aria-label="Close">
                                    Close
                                </button>

                            </div>
                        
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="modal-footer">
    </div>
</div>
<!--Modal start-->
<div class="modal modal fade" id="removeTheLateModal" tabindex="-1"
     role="dialog" aria-labelledby="contact-title-font" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <!--review for image quality-->

            <div class="modal-header">
                <button type="button" class="close contact-close" data-dismiss="modal" aria-label="Close">
                    <span class="close-contact" aria-hidden="true">&times;</span>
                </button>
                <h3>
                    Remove the late of the submission
                </h3>
            </div>
            <div class="modal-body">
                <div class="row">

                    <div class="col-xs-12">
                        <input id="removeTheLateTeamIdInput" type="hidden" />
                         
                        <div class="col-xs-3 text-center">

                            <button type="submit" id="removeTheLateButton"
                                    class="btn btn-primary">
                                Remove the late
                            </button>
                          
                        </div>
                          <div class="col-xs-2 text-center">
                           
                            <button type="button" class="btn btn-primary" data-dismiss="modal" aria-label="Close">
                                Close
                            </button>
                        </div>
                        
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="modal-footer">
    </div>
</div>

<script>

    var judgeRowIndex = 0;
    var submisionRowIndex = 0;
    var payStatusRowIndex = 0;
    var labResultUrlRowIndex = 0;
    var ActiveRowIndex = 0;
    var firstTime = true;
    var gridRowIndex = 0;

    $(document).ready(function () {

        $("#@jsGridHtmlElementId").jsGrid({
            width: "100%",
            height: "auto",
            editing: true,
            inserting: false,
            autoload: true,
            paging: true,
            pageSize: 1500,
            pageIndex: 1,
            pageButtonCount: 5,
            datatype: "json",
            updateOnResize: false,

            rowClick: function (args) {

                $.ajax({
                    type: "POST",
                    url: "/teammember/shtm",
                    data: { teamId: args.item.Id },
                    dataType: "html",
                }).done(function (response) {

                    $("#teamMemberDiv").html(response);
                    $("#teamNameSpan").text(args.item.Name);

                    if (args.item.WrittenReportUrlForMember != null && args.item.WrittenReportUrlForMember != '') {
                        $("#writtenReportId").attr("href", args.item.WrittenReportUrlForMember);
                        $("#writtenReportId").html("Written Report");
                    }
                    else {
                        $("#writtenReportId").html("");
                    }
                    if (args.item.FlashTalkReportUrlForMember != null && args.item.FlashTalkReportUrlForMember != '') {
                        $("#flashTalkReportId").attr("href", args.item.FlashTalkReportUrlForMember);
                        $("#flashTalkReportId").html("Flash Talk Slides");
                    }
                    else {
                        $("#flashTalkReportId").html("");
                    }

                    if (args.item.BrochureUrlForMember != null && args.item.BrochureUrlForMember != '') {
                        $("#brochureId").attr("href", args.item.BrochureUrlForMember);
                        $("#brochureId").html("Brochure");
                    }
                    else {
                        $("#brochureId").html("");
                    }

                    if (args.item.AwardNominationUrlForMember != null && args.item.AwardNominationUrlForMember != '') {
                        $("#awardNominationId").attr("href", args.item.AwardNominationUrlForMember);
                        $("#awardNominationId").html("AwardNomination");
                    }
                    else {
                        $("#awardNominationId").html("");
                    }

                    if (args.item.PreliminaryReportUrlForMember != null && args.item.PreliminaryReportUrlForMember != '' && args.item.PreliminaryReportUrlForMember != '---') {
                        $("#preliminaryReportId").attr("href", args.item.PreliminaryReportUrlForMember);
                        $("#preliminaryReportId").html("Preliminary Report");
                    }
                    else {
                        $("#preliminaryReportId").html("");
                    }

                    if (args.item.OpenTaskTestPlanUrlForMember != null && args.item.OpenTaskTestPlanUrlForMember != '' && args.item.OpenTaskTestPlanUrlForMember != '---') {
                        $("#openTaskPlanId").attr("href", args.item.OpenTaskTestPlanUrlForMember);
                        $("#openTaskPlanId").html("Open Task Test Plan");
                    }
                    else {
                        $("#openTaskPlanId").html("");
                    }

                    $("#teamMemberModal").modal();

                }).fail(function (data, textStatus, XMLHttpRequest) { });

            },
            onDataLoading: function (args) {


            },
            onDataLoaded: function (args) {

                for (i = judgeRowIndex - 1; i >= 0; i--) {
                    $("#judgeDiv" + i).on('shown.bs.collapse', function () {

                        $(this).prev().addClass("glyphicon-chevron-up");
                        $(this).prev().removeClass("glyphicon-chevron-down");
                    });

                    $("#judgeDiv" + i).on('hide.bs.collapse', function () {

                        $(this).prev().addClass("glyphicon-chevron-down");
                        $(this).prev().removeClass("glyphicon-chevron-up");
                    });

                }

                for (i = submisionRowIndex - 1; i >= 0; i--) {
                    $("#submisionDiv" + i).on('shown.bs.collapse', function () {

                        $(this).prev().addClass("glyphicon-chevron-up");
                        $(this).prev().removeClass("glyphicon-chevron-down");
                    });

                    $("#submisionDiv" + i).on('hide.bs.collapse', function () {

                        $(this).prev().addClass("glyphicon-chevron-down");
                        $(this).prev().removeClass("glyphicon-chevron-up");
                    });

                }

                //for (i = labResultUrlRowIndex - 1; i >= 0; i--) {
                //    $("#labResultUrlDiv" + i).on('shown.bs.collapse', function () {

                //        $(this).prev().addClass("glyphicon-chevron-up");
                //        $(this).prev().removeClass("glyphicon-chevron-down");
                //    });

                //    $("#labResultUrlDiv" + i).on('hide.bs.collapse', function () {

                //        $(this).prev().addClass("glyphicon-chevron-down");
                //        $(this).prev().removeClass("glyphicon-chevron-up");
                //    });

                //}
            },
            controller: {
                loadData: function (filter) {
                    gridRowIndex = 0;
                    if (firstTime == false) {
                        return $.ajax({
                            type: "POST",
                            url: "@jsGridLoadDataUrl",
                            data: { filter }
                        });
                    }
                    firstTime = false;
                }
            },

            onRefreshing: function (args) { gridRowIndex = 0; }, fields:
                [
                    {
                        type: "control",
                        modeSwitchButton: false,
                        editButton: false,
                        deleteButton: false,
                        clearFilterButton: false,
                        visible: true,
                        width: 65,
                        headerTemplate: function () {

                            return $("<a id='excelFileUrl' href=''><img src ='/Resources/Images/excel.png' width='50px' title='Export To Excel'/></a>");
                        },
                        itemTemplate: function (value, item) {

                            //var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            excelFileUrl = item.ExcelFileUrl;
                            $("#excelFileUrl").attr("href", excelFileUrl);

                            //var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            //rowNo++;
                            //var customDiv = $("<div>" + rowNo + "</div>");
                            //return result.add(customDiv);
                        }
                    },
                    {
                        name: "Id", type: "number", title: "@Model["Row No"]", sorting: false, filtering: false, visible: true, width: 50,
                        itemTemplate: function (value, item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var customDiv = $("<div class='text-center'>" + (gridRowIndex + 1) + "</div>");
                            gridRowIndex++;
                            $("#externalPager").html('Total rows: ' + gridRowIndex);

                            return result.add(customDiv);
                        }
                    },
                    { name: "MemberUserId", type: "text", visible: false },
                    { name: "WrittenReportUrlForMember", type: "text", visible: false },
                    { name: "FlashTalkReportUrlForMember", type: "text", visible: false },
                    { name: "BrochureUrlForMember", type: "text", visible: false },
                    { name: "AwardNominationUrlForMember", type: "text", visible: false },
                    { name: "PayStatus", type: "bool", visible: false },
                    { name: "Name", title: "@Model["Team Name"]", type: "text", width: 120 },
                    {
                        name: "Payment", title: "@Model["Payment"]", width: 100, type: "number",
                        itemTemplate: function (item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var id = arguments[1].Id;
                            var payment = arguments[1].Payment;
                            var amount = arguments[1].Amount;

                            var customButton = $("<button>")
                                .attr({
                                    "data-id": id,
                                    "class": "btn btn-primary",
                                })
                                .on("click", function () {
                                    var teamId = id;
                                    var payment = $("#discountTextBox_" + teamId).val();

                                    if (payment == 0) {

                                        changePaymentConfirmation(this, teamId, payment);
                                    }
                                    else {
                                        $.ajax({
                                            type: "POST",
                                            url: "/team/utd",
                                            data: { teamId: teamId, payment: payment },
                                        }).done(function (response) {
                                            if (response.lastStatus == true) {
                                                alert("Operation has been successful.");
                                            }
                                            else {
                                                alert("Operation has been failed...");
                                            }

                                            HoldOn.close();

                                        });
                                    }

                                    return false;
                                }).text("Change");

                            var customInput = $("<input>")
                                .attr({
                                    "id": 'discountTextBox_' + id,
                                    "value": payment,
                                    "type": "number",
                                    "min": "0",
                                    "max": "100",
                                    "step": "5",
                                }).css("width", "56px")
                                .on("click", function () {

                                    return false;
                                }).keypress(function (evt) {
                                    evt.preventDefault();
                                });
                            var customSpan = $("<span>")
                                .text("%")
                                .css(
                                    {
                                        "font-weight": "bold",
                                        "padding-left": "5px"
                                    })
                                .on("click", function () {

                                    return false;
                                });

                            var amuntOfPayment = amount + "";

                            if (amuntOfPayment.indexOf(".") == -1) {
                                amuntOfPayment = "$" + amount + ".00";
                            }
                            else {
                                amuntOfPayment = "$" + amount;

                            }

                            var customPaymentSpan = $("<span>")
                                .text(amuntOfPayment)
                                .css(
                                    {
                                        "font-weight": "bold",

                                    }).addClass("text-center")
                                .on("click", function () {

                                    return false;
                                }).append('<span style="color: #19bf10;">-(' + payment + '%)</span>');


                            if (arguments[1].PayStatus == true) {
                                return result.add(customPaymentSpan);

                            }
                            else {
                                return result.add(customInput).add(customSpan).add(customButton);
                            }
                        }
                    },
                    {
                        name: "PaidByCheque", title: "@Model["Paid By Cheque"]", width: 75, visible: true,
                        itemTemplate: function (value, item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var activeImageUrl = '';
                            if (item.PaidByCheque == true) {
                                activeImageUrl = '/Resources/Images/Stylish_ok.png';
                            }
                            else {
                                activeImageUrl = '/Resources/Images/Stylish_not_ok.png';
                            }
                            var customButton =
                                $("<button>")
                                    .attr({
                                        "title": "Click to change the Paid By Cheque status",
                                        "data-teamId": item.Id,
                                        "class": "btn btn-default",
                                    })
                                    .on("click", function (e) {

                                        e.preventDefault();

                                        var teamId = $(this).data('teamid');

                                        if (item.PaidByCheque != true && activeImageUrl != '/Resources/Images/Stylish_ok.png') {

                                            changePaidByChequeConfirmation(this, item.MemberUserId, teamId, 'activeImage' + teamId);
                                        }

                                        return false;

                                    }).append("<img id='activeImage" + item.Id + "' src='" + activeImageUrl + "' width='32px'\>");

                            if ((item.PayStatus == false && item.RegistrationStatus == true) || item.PaidByCheque == true) {
                                return result.add(customButton);
                            }
                        }
                    },
                    {
                        name: "TaskName", title: "@Model["Task"]", width: 150,
                        itemTemplate: function (value, item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            debugger
                            var customProjectNameSpan = '';
                            {
                                customProjectNameSpan = $("<span>")
                                    .text(item.ProjectName)
                                    .css({
                                        "font-weight": "bold",

                                    }).addClass("text-center display-block")
                                    .on("click", function () {

                                        return false;
                                    });
                            }

                            var customTaskNameSpan = $("<span>")
                                .text(item.TaskName)
                                .css({}).addClass("text-center")
                                .on("click", function () {

                                    return false;
                                });

                            return result.add(customTaskNameSpan).add(customProjectNameSpan);
                        }
                    },
                    { name: "Advisor", title: "@Model["Faculty Advisor"]", type: "text", width: 120 },
                    { name: "Leader", title: "@Model["Student Leader"]", type: "text", width: 120 },
                    {
                        name: "Judges", title: "@Model["Judges"]", width: 80, type: "text", filtering: false,
                        itemTemplate: function (item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            var judgeList = [''];
                            if (item != null) {
                                judgeList = item.split(',');
                            }
                            var judgeHtmlList = '';

                            for (i = 0; i < judgeList.length; i++) {
                                judgeHtmlList += '<li>' + judgeList[i] + '</li>';
                            }

                            var collapsElement = $(
                                '<div id="judgeDiv' + judgeRowIndex + '" class="collapse">' +
                                '<ul>' + judgeHtmlList + '</ul>' +
                                '</div>');

                            var customButton = $("<button>")
                                .attr({
                                    "data-toggle": "collapse",
                                    "class": "btn btn-success glyphicon glyphicon-chevron-down",
                                    "data-target": "#judgeDiv" + judgeRowIndex
                                })
                                .on("click", function () {
                                    $(this).next().collapse("toggle");
                                    return false;
                                });

                            judgeRowIndex++;
                            return result.add(customButton).add(collapsElement);
                        }
                    },
                    {
                        name: "RegistrationStatus", title: "@Model["Registration Status"]", width: 80, type: "checkbox",
                        itemTemplate: function (item) {

                            if (item == true) {
                                val = '/Resources/Images/Stylish_ok.png';
                            }
                            else {
                                val = '/Resources/Images/Stylish_not_ok.png';
                            }

                            return $("<img>").attr("src", val).css({ width: "32px" })
                        }
                    },
                    {
                        name: "PayStatus", title: "@Model["Pay Status"]", width: 50,
                        itemTemplate: function (value, item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var activeImageUrl = '';
                            if (item.PayStatus == true) {
                                activeImageUrl = '/Resources/Images/Stylish_ok.png';
                            }
                            else {
                                activeImageUrl = '/Resources/Images/Stylish_not_ok.png';
                            }

                            return $("<img>").attr("src", activeImageUrl).css({ width: "32px" })

                        }
                    },
                    {
                        name: "Approved", title: "@Model["Safety Status"]", width: 50, type: "checkbox",
                        itemTemplate: function (item) {

                            if (item == true) {
                                val = '/Resources/Images/Stylish_ok.png';
                            }
                            else {
                                val = '/Resources/Images/Stylish_not_ok.png';
                            }

                            return $("<img>").attr("src", val).css({ width: "32px" })
                        }
                    },
                    {
                        name: "PreliminaryReportStatus", title: "@Model["Preliminary Report"]", width: 80, type: "checkbox", visible: false,
                        itemTemplate: function (item) {
                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            var id = arguments[1].Id;
                            var scored = arguments[1].Scored;


                            if (item == "/Resources/Images/Stylish_ok.png") {


                                var activeImageUrl = '';
                                if (scored == true) {
                                    activeImageUrl = '/Resources/Images/scored.png';
                                }
                                else {
                                    activeImageUrl = '/Resources/Images/Stylish_ok.png';
                                }
                                var customButton =
                                    $("<button>")
                                        .attr({
                                            "title": "Click to change the Scored status",
                                            "data-teamId": id,
                                            "class": "btn btn-default",
                                        })
                                        .on("click", function (e) {

                                            e.preventDefault();

                                            var teamId = $(this).data('teamid');

                                            changeScoredConfirmation(this, teamId, 'activeImage' + teamId);

                                            return false;

                                        }).append("<img id='activeImage" + id + "' src='" + activeImageUrl + "' width='32px'\>");

                                return result.add(customButton);
                            }
                            else {
                                if (item != "") {
                                    return $("<img>").attr("src", item).css({ width: "32px" });
                                }
                                return $("<span>").text("---").css({ width: "32px" });
                            }
                        }
                    },
                    {
                        name: "OpenTaskTestPlanStatus", title: "@Model["Open Task Test Plan"]", width: 80, type: "checkbox", visible: false,
                        itemTemplate: function (item) {
                            if (item != "") {
                                return $("<img>").attr("src", item).css({ width: "32px" });
                            }
                            return $("<span>").text("---").css({ width: "32px" });
                        }
                    },
                    {
                        name: "WrittenReportUrl", title: "@Model["Written Report"]", width: 100, type: "checkbox",
                        itemTemplate: function (item) {
                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            var writtenReportDate = arguments[1].WrittenReportDateString;
                            var writtenReportLate = arguments[1].WrittenReportLate;
                            var finalDateTime = new Array(3);
                            var teamId = arguments[1].Id;

                            finalDateTime[0] = '';
                            finalDateTime[1] = '';
                            finalDateTime[2] = '';

                            if (writtenReportDate !== null) {
                                finalDateTime = writtenReportDate.split(' ');
                            }
                            var redColor = '';
                            if (writtenReportLate == true) {
                                redColor = ' style="color:#f00" ';
                            }
                            var val = '/Resources/Images/Mimetypes128x128/' + item.split("?CT=")[1];

                            var customDateSpan = $("<span " + redColor + ">")
                                .text(finalDateTime[0])
                                .css(
                                    {
                                        "font-weight": "bold",
                                        "display": "block",

                                    }).addClass("text-center")
                                .append('<span class="display-block" ' + redColor + '>' + finalDateTime[1] + ' ' + finalDateTime[2] + '</span>');

                            var image = $("<img>").attr("src", val).css({ width: "32px" });
                            if (finalDateTime[1] == undefined) {
                                return result.add(image);

                            }

                            var customButton = $("<button>")
                                .attr({
                                    "data-id": teamId,
                                    "class": "btn btn-primary btn-wrap-text",
                                })
                                .on("click", function () {

                                    showRemoveTheLateModal(teamId);

                                    return false;
                                }).text("Remove the late");

                            if (writtenReportLate == true) {

                                return result.add(image).add(customDateSpan).add(customButton);
                            }

                            return result.add(image).add(customDateSpan);
                        }
                    },
                    {
                        name: "Submissions", title: "@Model["Submissions"]", width: 150, type: "text", filtering: false,
                        itemTemplate: function (item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            var submisionList = [''];
                            if (item != null) {
                                submisionList = item.split(',');
                            }
                            var submisionHtmlList = '';

                            for (i = 0; i < submisionList.length; i++) {
                                submisionHtmlList += '<li>' + submisionList[i] + '</li>';
                            }

                            var collapsElement = $(
                                '<div id="submisionDiv' + submisionRowIndex + '" class="collapse in">' +
                                '<ul>' + submisionHtmlList + '</ul>' +
                                '</div>');

                            var customButton = $("<button>")
                                .attr({
                                    "data-toggle": "collapse",
                                    "class": "btn btn-success glyphicon glyphicon-chevron-down",
                                    "data-target": "#submisionDiv" + submisionRowIndex
                                })
                                .on("click", function () {
                                    $(this).next().collapse("toggle");
                                    return false;
                                });

                            submisionRowIndex++;
                            return result.add(customButton).add(collapsElement);
                        }
                    },
                    {
                        name: "Shipping", title: "@Model["Shipping"]", width: 80, type: "checkbox", visible: false,
                        itemTemplate: function (item) {

                            if (item == true) {
                                val = '/Resources/Images/Stylish_ok.png';
                            }
                            else {
                                val = '/Resources/Images/Stylish_not_ok.png';
                            }
                            return $("<img>").attr("src", val).css({ width: "32px" })
                        }
                    },
                    {
                        name: "FlashTalkReportUrl", title: "@Model["Flash Talk Slides"]", width: 50, type: "checkbox", visible: false,
                        itemTemplate: function (item) {

                            val = '/Resources/Images/Mimetypes128x128/' + item.split("?CT=")[1];
                            return $("<img>").attr("src", val).css({ width: "32px" })
                        }
                    },
                    {
                        name: "BrochureUrl", title: "@Model["Brochure"]", width: 100, type: "checkbox", visible: false,
                        itemTemplate: function (item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                            var brochureDate = arguments[1].BrochureDateString;
                            var finalDateTime = new Array(3);

                            finalDateTime[0] = '';
                            finalDateTime[1] = '';
                            finalDateTime[2] = '';

                            if (brochureDate !== null) {
                                finalDateTime = brochureDate.split(' ');
                            }

                            var val = '/Resources/Images/Mimetypes128x128/' + item.split("?CT=")[1];

                            var customDateSpan = $("<span>")
                                .text(finalDateTime[0])
                                .css(
                                    {
                                        "font-weight": "bold",
                                        "display": "block",

                                    }).addClass("text-center")
                                .append('<span class="display-block">' + finalDateTime[1] + ' ' + finalDateTime[2] + '</span>');

                            var image = $("<img>").attr("src", val).css({ width: "32px" });
                            return result.add(image).add(customDateSpan);
                        }
                    },
                    {
                        name: "AwardNominationUrl", title: "@Model["Award Nomination"]", width: 50, type: "checkbox", visible: false,
                        itemTemplate: function (item) {

                            val = '/Resources/Images/Mimetypes128x128/' + item.split("?CT=")[1];
                            return $("<img>").attr("src", val).css({ width: "32px" })
                        }
                    },
                    @*{ name: "LabResult", title: "@Model["Lab Result"]", type: "number", width: 100 },*@
                    {
                        name: "Survey", title: "@Model["Survey"]", width: 50, type: "checkbox", visible: false,
                        itemTemplate: function (item) {

                            if (item == true) {
                                val = '/Resources/Images/Stylish_ok.png';
                            }
                            else {
                                val = '/Resources/Images/Stylish_not_ok.png';
                            }

                            return $("<img>").attr("src", val).css({ width: "32px" })
                        }
                    },
                    { name: "SafetyStatus", type: "bool", visible: false },
                    {
                        name: "Transfer", title: "@Model["Transfer"]", width: 140, type: "number", visible: true,
                        itemTemplate: function (item) {

                            var result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var id = arguments[1].Id;

                            var customButton = $("<button>")
                                .attr({
                                    "data-id": id,
                                    "class": "btn btn-primary btn-wrap-text",
                                })
                                .on("click", function () {

                                    showTransferToAnOtherAdvisor(id);

                                    return false;
                                }).text("Transfer team to another advisor");

                            return result.add(customButton);
                        }
                    },
                ]
        });

        $(".config-panel input[type=checkbox]").on("click", function () {
            var $cb = $(this);
            $("#@jsGridHtmlElementId").jsGrid("option", $cb.attr("id"), $cb.is(":checked"));
        });

        //$("#filtering").click();
        $("#sorting").click();

    });



    function reversTeamPayStatus(teamId, activeImageUrl) {
        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $.ajax({
            type: "POST",
            url: "/team/utps",
            data: { teamId: teamId },
        }).done(function (response) {

            if (response.lastStatus == true) {
                $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_ok.png');
            }
            else {
                $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_not_ok.png');
            }

            HoldOn.close();

        });

    }

    function reversPaidByChequeStatus(teamId, activeImageUrl) {

        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $.ajax({
            type: "POST",
            url: "/team/upbc",
            data: { teamId: teamId },
        }).done(function (response) {


            if (response.lastStatus == true) {
                $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_ok.png');
            }
            else {
                $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_not_ok.png');
            }

            HoldOn.close();

        });
    }

    function changePaidByChequeConfirmation(sender, advisorUserId, teamId, activeImageUrl) {

        var changePaidByChequeConfirmationDialogObjec =
        {
            title: 'Confirm...',
            message: 'Do you confirm that this team has paid by cheque/s?',
            sender: sender,
            width: "300",
            height: "auto",
            dialogConfirmId: "confirmDialogContainer",
            yesButton: '@Model["Ok"]',
            noButton: '@Model["Cancel"]',
            acceptCallbak: function (sender) {

                var advisorId = advisorUserId;
                var tid = teamId;

                var clientTeamSelectionList = [];

                clientTeamSelectionList.push(
                    {
                        TeamId: tid,
                        Checked: true,
                        IsFirstTeam: false,
                    });

                jsonData = JSON.stringify(
                    {
                        "currentTeamId": tid,
                        "advisorUserId": advisorId,
                        "teamSelectionList": clientTeamSelectionList,
                    });

                HoldOn.open({
                    theme: 'sk-cube-grid',
                    message: "<h4>@Model["Please wait..."]</h4>"
                });



                $.ajax({
                    contentType: 'application/json',
                    type: "POST",
                    url: "/admin/pcpi",
                    data: jsonData,

                }).done(function (response) {

                    if (response.lastStatus == true) {
                        $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_ok.png');
                        location.reload();
                    }
                    else {

                        $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_not_ok.png');
                        alert("Operation has been failed...");

                    }

                    HoldOn.close();

                }).fail(function (data, textStatus, XMLHttpRequest) {
                    alert("Operation has been failed...");

                    HoldOn.close();

                });
            },

            rejectCallbak: function (sender) { }
        }

        openConfirmDialog(changePaidByChequeConfirmationDialogObjec);

    }

    function changeScoredConfirmation(sender, teamId, activeImageUrl) {

        var changeScoredConfirmationDialogObjec =
        {
            title: 'Confirm...',
            message: 'Do you confirm that this team has scored?',
            sender: sender,
            width: "300",
            height: "auto",
            dialogConfirmId: "confirmDialogContainer",
            yesButton: '@Model["Ok"]',
            noButton: '@Model["Cancel"]',
            acceptCallbak: function (sender) {

                var tid = teamId;

                HoldOn.open({
                    theme: 'sk-cube-grid',
                    message: "<h4>@Model["Please wait..."]</h4>"
                });

                $.ajax({
                    type: "POST",
                    url: "/admin/sps",
                    data: { id: tid },

                }).done(function (response) {

                    if (response.lastStatus == true) {
                        $("#" + activeImageUrl).attr('src', '/Resources/Images/scored.png');
                    }
                    else {

                        $("#" + activeImageUrl).attr('src', '/Resources/Images/Stylish_ok.png');

                    }

                    HoldOn.close();

                }).fail(function (data, textStatus, XMLHttpRequest) {
                    alert("Operation has been failed...");

                    HoldOn.close();

                });
            },

            rejectCallbak: function (sender) { }
        }

        openConfirmDialog(changeScoredConfirmationDialogObjec);

    }

    function changePaymentConfirmation(sender, teamId, payment) {

        var changePaymentConfirmationDialogObjec =
        {
            title: 'Warning...',
            message: 'If you click on "OK" button the payment status of this team will be "Paid" and there is no more charge for this team to pay on the system.<br/>' +
                'Please causion, you can not change the payment statue of this team after click "OK".',
            sender: sender,
            width: "600",
            height: "auto",
            dialogConfirmId: "confirmDialogContainer",
            yesButton: '@Model["Ok"]',
            noButton: '@Model["Cancel"]',
            acceptCallbak: function (sender) {

                var tid = teamId;
                var p = payment;

                HoldOn.open({
                    theme: 'sk-cube-grid',
                    message: "<h4>@Model["Please wait..."]</h4>"
                });

                $.ajax({
                    type: "POST",
                    url: "/team/utd",
                    data: { teamId: tid, payment: p },
                }).done(function (response) {
                    if (response.lastStatus == true) {
                        alert("Operation has been successful.");
                        location.href = "/admin/ups_tfim";
                    }
                    else {
                        alert("Operation has been failed...");
                    }

                });
            },

            rejectCallbak: function (sender) { }
        }

        openConfirmDialog(changePaymentConfirmationDialogObjec);

    }

    function showRemoveTheLateModal(teamId) {

        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $("#removeTheLateTeamIdInput").val(teamId);
        $("#removeTheLateModal").modal();

        HoldOn.close();

    }

    $("#removeTheLateButton").click(function () {

        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $.ajax({
            type: "POST",
            url: "/team/rtlos",
            data: { teamId: $('#removeTheLateTeamIdInput').val() },

        }).done(function (response) {

            if (response.result == true) {
                $("#removeTheLateModal").hide();
                alert("Operation has been successful.");
                window.location.reload();
            }
            else {
                $("#removeTheLateModal").hide();
                alert("Operation has been failed...");
                HoldOn.close();
            }

            HoldOn.close();

        });
    });

    function showTransferToAnOtherAdvisor(teamId) {

        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $("#teamIdInput").val(teamId);
        $("#transferToAnOtherAdvisorModal").modal();

        HoldOn.close();

    }

    $("#transferToAnOtherAdvisorButton").click(function () {

        HoldOn.open({
            theme: 'sk-cube-grid',
            message: "<h4>@Model["Please wait..."]</h4>"
        });

        $.ajax({
            type: "POST",
            url: "/team/ttoa",
            data: { teamId: $('#teamIdInput').val(), advisorId: $('#advisorIdInput').val() },

        }).done(function (response) {

            if (response.result == true) {
                $("#transferToAnOtherAdvisorModal").hide();
                alert("Operation has been successful.");
                window.location.reload();
            }
            else {
                $("#transferToAnOtherAdvisorModal").hide();
                alert("Operation has been failed...");
                HoldOn.close();
            }

            HoldOn.close();

        });
    });

</script>
