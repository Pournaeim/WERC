
@model Model.ViewModels.Test.VmTest


<h2 id="actionMessageHandlerMessage"></h2>

@using (Html.BeginForm("et", "test", FormMethod.Post, new { id = "_TestEdit_Form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal text-left">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
        <div class="form-group">
            @Html.Label(@Model["Name"], htmlAttributes: new { @class = "control-label col-sm-2 col-xs-12  col-md-2" })
            <div class="col-sm-10 col-xs-12 col-md-6 col-lg-4">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage(@Model["Name"], "", new { @class = "text-danger" })
            </div>
            <span class="text-danger fa-2x">*</span>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-2 col-xs-12 col-md-2" })
            <div class="col-sm-10 col-xs-12 col-md-6 col-lg-4">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control short-bio" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <span class="text-danger fa-2x">*</span>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-sm-10 col-xs-12 col-md-6 col-lg-4">
                <input id="_TestEdit_Submit" type="submit" value="@Model["Update"]" class="btn btn-primary" />
            </div>
        </div>

        @Html.HiddenFor(model => model.Id, htmlAttributes: new { @id = "IdHidden" })
    </div>
}

<script>
    $('#_TestEdit_Form').submit(function (e) {
        e.preventDefault();

        var form = $('#_TestEdit_Form');
        if (form.valid() == false) return;

        if (validateCustomElements() == false) { return false;}

            var formData = new FormData($('#_TestEdit_Form').get(0));

            HoldOn.open({
                    theme: 'sk-cube-grid',
                    message: "<h4>@Model["Please wait..."]</h4>"
            });

            $.ajax({
                url: "/test/et", //you can get also action attribute from form using form.attr('action')
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
            }).done(function (result) {


                if (result.success == false) {

                    $("#actionMessageHandlerMessage").text(result.message);
                }

                @if(!string.IsNullOrEmpty(@Model.OnActionSuccess))
                {
                    @Html.Raw("if(result.success == true){"+@Model.OnActionSuccess+"(result);}")
                }

                @if(!string.IsNullOrEmpty(@Model.OnActionFailed))
                {
                    @Html.Raw("if(result.success == false){"+@Model.OnActionFailed + "();}")
                }

                HoldOn.close();

                }).fail(function () { HoldOn.close(); });

        return false;
    });
</script>

@*validate*@

<script>

    function validateTest() {

       
            return true;

    }

    function validateCustomElements() {

        @*if ($(".input-ghost").val() == '') {
            alert("@Model["please select test logo..."]");
            return false;
        }*@
        return validateTest();

    }
</script>

@*Initialize*@
<script type="text/javascript">
 
</script>

