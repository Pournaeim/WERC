
@using Model.ToolsModels.DropDownList

@model  VmDropDownList

@{
    var loadDataUrl = "";
    var disabled = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryStringParameters))
    {
        loadDataUrl = Url.Action(Model.DataAction, Model.DataController) + "/?" + Model.QueryStringParameters + "&updateProfile=true";
    }
    else
    {
        loadDataUrl = Url.Action(Model.DataAction, Model.DataController) + "/?updateProfile=true";
    }

    if (Model.ReadOnly == true)
    {
        disabled = "disabled";
    }
}

<select id="@Model.HtmlElementId" name="@Model.HtmlElementId">
    <option value="-1">@Model.OptionLabel</option>
</select>

<script>
    $(document).ready(function () {

        $.getJSON('@loadDataUrl', function (response) {

            $("#@Model.HtmlElementId").empty();

            $.each(response, function (index, item) {

                if (item.Value == '@Model.ActiveItemValue') {

                    $("#@Model.HtmlElementId").append($('<option @disabled selected></option>').text(item.Text).val(item.Value));
                }
                else {
                    $("#@Model.HtmlElementId").append($('<option @disabled></option>').text(item.Text).val(item.Value));
                }
            });
            $('#@Model.HtmlElementId').selectpicker({
                liveSearch: true,
                maxOptions: 1
            });

            $("#@Model.HtmlElementId").change(function () {

                @if (!string.IsNullOrEmpty(@Model.OnItemSelected))
                {
                    @Html.Raw("var id = $('#" + @Model.HtmlElementId + " option:selected').attr('value');")
                    @Model.OnItemSelected@Html.Raw("(id);")
                }
            });

            @if (!string.IsNullOrEmpty(@Model.OnItemSelected))
            {
                @Html.Raw("var id = $('#" + @Model.HtmlElementId + " option:selected').attr('value');")
                @Model.OnItemSelected@Html.Raw("(id);")
            }
        });
    });


    function setDropdownListActiveItemByValue(id, val) {
        debugger
        var sel = $("#" + id);

        $("#" + id).selectpicker('val', val);
        $("#" + id).selectpicker('refresh');


        return;
        for (var i = 0; i < sel[0].options.length; i++) {

            if (sel[0].options[i].value === val) {
                sel[0].options.selectedIndex = i;
                sel.val(val);

                $(sel).selectpicker('refresh');
                break;
            }
        }
    }
</script>
